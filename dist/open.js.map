{"version":3,"file":"open.js","mappings":";;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;;;;;;ACrCa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,iBAAiB,mBAAO,CAAC,GAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;;;;;;AC7Da;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,mBAAO,CAAC,GAAU;AACnC,mBAAmB,mBAAO,CAAC,GAAY;AACvC,iBAAiB,mBAAO,CAAC,GAAU;AACnC;AACA;AACA;AACA;AACA;AACA,6CAA6C,mBAAmB;AAChE;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;;;;;;ACvPa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,iBAAiB,mBAAO,CAAC,GAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;;;;UC9DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack:///./src/common.js","webpack:///./src/gameTime.js","webpack:///./src/open.js","webpack:///./src/sample.js","webpack:///webpack/bootstrap","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Common = void 0;\r\nclass Common {\r\n    static getContext() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (Common.audioCtx) {\r\n                return Common.audioCtx;\r\n            }\r\n            return new Promise((resolve) => {\r\n                const context = new window.AudioContext();\r\n                if (context.state === 'running') {\r\n                    resolve(context);\r\n                }\r\n                else {\r\n                    setTimeout(() => __awaiter(this, void 0, void 0, function* () {\r\n                        resolve(yield Common.getContext());\r\n                    }), 500);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    static indexToTheta(index) {\r\n        return (index * 2 * Math.PI) / 16 - Math.PI;\r\n    }\r\n}\r\nexports.Common = Common;\r\nCommon.audioCtx = null;\r\n//# sourceMappingURL=common.js.map","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GameTime = void 0;\r\nconst common_1 = require(\"./common\");\r\nclass GameTime {\r\n    constructor(bpm) {\r\n        console.assert(bpm);\r\n        this.bpm = bpm;\r\n        this.elapsedMs = 0;\r\n        this.running = false;\r\n        this.audioCtx = null;\r\n        this.audioCtxZero = 0;\r\n        this.init();\r\n    }\r\n    init() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.audioCtx = yield common_1.Common.getContext();\r\n        });\r\n    }\r\n    start() {\r\n        if (this.audioCtx) {\r\n            this.running = true;\r\n            this.audioCtxZero = this.audioCtx.currentTime - this.elapsedMs * 1000;\r\n        }\r\n    }\r\n    getBpm() {\r\n        return this.bpm;\r\n    }\r\n    getElapsedMs() {\r\n        return this.elapsedMs;\r\n    }\r\n    getAudioTimeForGameTime(gameMs) {\r\n        return this.audioCtxZero + gameMs / 1000;\r\n    }\r\n    getAudioTimeNow() {\r\n        return this.audioCtxZero + this.elapsedMs / 1000;\r\n    }\r\n    roundQuantizeAudioTime(audioTimeS) {\r\n        const secondsPerBeat = 60 / this.bpm / 4;\r\n        const beat = Math.round(audioTimeS / secondsPerBeat);\r\n        return beat * secondsPerBeat;\r\n    }\r\n    getRoundQuantizedAudioTimeNow() {\r\n        return this.roundQuantizeAudioTime(this.getAudioTimeNow());\r\n    }\r\n    tick(timeMs, timeDeltaMs) {\r\n        if (this.running) {\r\n            this.elapsedMs += timeDeltaMs;\r\n        }\r\n    }\r\n}\r\nexports.GameTime = GameTime;\r\n//# sourceMappingURL=gameTime.js.map","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"./common\");\r\nconst gameTime_1 = require(\"./gameTime\");\r\nconst sample_1 = require(\"./sample\");\r\nconst url = new URL(document.URL);\r\nfunction transients(frames) {\r\n    const result = [];\r\n    let sum = 0.0;\r\n    const bufferSize = Math.round(44000 / 20);\r\n    for (let i = frames.length - bufferSize; i < frames.length; ++i) {\r\n        sum += frames[i] * frames[i];\r\n    }\r\n    let lastTransient = -bufferSize;\r\n    for (let i = 0; i < frames.length; ++i) {\r\n        const x2 = frames[i] * frames[i];\r\n        if ((x2 > 0.02) && (x2 / (sum / bufferSize) > 10)) {\r\n            if (i - lastTransient >= bufferSize) {\r\n                result.push(i);\r\n                lastTransient = i;\r\n            }\r\n        }\r\n        const prevX = frames[(i - bufferSize + frames.length) % frames.length];\r\n        sum += x2 - prevX * prevX;\r\n    }\r\n    return result;\r\n}\r\nfunction renderBuffer(ctx, canvas, audioCtx, frames, bpm) {\r\n    const framesPerBeat = Math.round(audioCtx.sampleRate * 60 / bpm);\r\n    const t = transients(frames);\r\n    ctx.fillStyle = '#6f6';\r\n    for (const i of t) {\r\n        ctx.fillRect(Math.round(i / frames.length * 1000) - 1, 0, 3, canvas.height);\r\n    }\r\n    let x = 0;\r\n    ctx.fillStyle = '#f992';\r\n    let framesUntilNextBeat = 0;\r\n    for (let i = 0; i < frames.length; ++i) {\r\n        const y = 200 * frames[i];\r\n        ctx.fillRect(x, 300 - y, 1, 2 * y);\r\n        framesUntilNextBeat -= 1;\r\n        x += 1000 / frames.length;\r\n    }\r\n}\r\nfunction renderBars(canvas, frames, audioCtx, bpm) {\r\n    const ctx = canvas.getContext('2d');\r\n    const framesPerBeat = Math.round(audioCtx.sampleRate * 60 / bpm);\r\n    let x = 0;\r\n    ctx.fillStyle = '#f992';\r\n    let framesUntilNextBeat = 0;\r\n    for (let i = 0; i < frames.length; ++i) {\r\n        if (framesUntilNextBeat <= 0) {\r\n            framesUntilNextBeat += framesPerBeat;\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillRect(Math.round(x), 100, 1, canvas.height - 200);\r\n            ctx.fillStyle = '#f992';\r\n        }\r\n        framesUntilNextBeat -= 1;\r\n        x += 1000 / frames.length;\r\n    }\r\n}\r\nfunction initCanvas(body) {\r\n    const peaksCanvas = document.createElement('canvas');\r\n    peaksCanvas.id = 'peaks';\r\n    peaksCanvas.width = 1000;\r\n    peaksCanvas.height = 600;\r\n    peaksCanvas.style.setProperty('visibility', 'hidden');\r\n    body.appendChild(peaksCanvas);\r\n    const barsCanvas = document.createElement('canvas');\r\n    barsCanvas.id = 'bars';\r\n    barsCanvas.width = 1000;\r\n    barsCanvas.height = 600;\r\n    body.appendChild(barsCanvas);\r\n    const selectionCanvas = document.createElement('canvas');\r\n    selectionCanvas.id = 'selection';\r\n    selectionCanvas.width = 1000;\r\n    selectionCanvas.height = 600;\r\n    body.appendChild(selectionCanvas);\r\n    return [peaksCanvas, barsCanvas, selectionCanvas];\r\n}\r\nclass Granules {\r\n    constructor(audioBuffer, audioCtx) {\r\n        this.audioBuffer = audioBuffer;\r\n        this.numSamples = audioBuffer.getChannelData(0).length;\r\n        this.audioCtx = audioCtx;\r\n        this.controlPoints = [0, this.numSamples / audioCtx.sampleRate];\r\n        this.playbackPoints = [0, this.numSamples / audioCtx.sampleRate];\r\n        this.activePoint = 0;\r\n    }\r\n    getXForPoint(index, canvas) {\r\n        const x = (canvas.width * this.controlPoints[index]) /\r\n            (this.numSamples / this.audioCtx.sampleRate);\r\n        return x;\r\n    }\r\n    getXForPlayback(index, canvas) {\r\n        const x = (canvas.width * this.playbackPoints[index]) /\r\n            (this.numSamples / this.audioCtx.sampleRate);\r\n        return x;\r\n    }\r\n    render(canvas, peaksCanvas) {\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = '#66f';\r\n        for (let i = 0; i < this.controlPoints.length - 1; ++i) {\r\n            const width = this.getXForPoint(i + 1, canvas) -\r\n                this.getXForPoint(i, canvas);\r\n            if (i === this.activePoint) {\r\n                ctx.fillStyle = '#aaf';\r\n            }\r\n            else if (i % 2 === 0) {\r\n                ctx.fillStyle = '#aaa';\r\n            }\r\n            else {\r\n                ctx.fillStyle = '#ddd';\r\n            }\r\n            ctx.fillRect(this.getXForPlayback(i, canvas), 0, width, canvas.height);\r\n            ctx.drawImage(peaksCanvas, this.getXForPoint(i, canvas), 0, width, canvas.height, this.getXForPlayback(i, canvas), 0, width, canvas.height);\r\n        }\r\n    }\r\n    changeStart(delta) {\r\n        this.controlPoints[this.activePoint] =\r\n            Math.max(0, this.controlPoints[this.activePoint] + delta);\r\n        this.playbackPoints[this.activePoint] =\r\n            Math.max(0, this.playbackPoints[this.activePoint] + delta);\r\n    }\r\n    changePlayStart(delta) {\r\n        this.playbackPoints[this.activePoint] =\r\n            Math.max(0, this.playbackPoints[this.activePoint] + delta);\r\n    }\r\n    changeEnd(delta) {\r\n        this.controlPoints[this.activePoint + 1] += delta;\r\n        this.playbackPoints[this.activePoint + 1] += delta;\r\n    }\r\n    next(dir) {\r\n        this.activePoint += dir;\r\n        this.activePoint = this.activePoint % (this.controlPoints.length - 1);\r\n    }\r\n    play() {\r\n        console.log('playing');\r\n        const audioNode = this.audioCtx.createBufferSource();\r\n        audioNode.buffer = this.audioBuffer;\r\n        audioNode.connect(this.audioCtx.destination);\r\n        const duration = this.controlPoints[this.activePoint + 1]\r\n            - this.controlPoints[this.activePoint];\r\n        audioNode.start(0, this.controlPoints[this.activePoint], duration);\r\n    }\r\n    splitInternal(a, i) {\r\n        const mid = (a[i] + a[i + 1]) / 2;\r\n        a.splice(i + 1, 0, mid);\r\n        return mid;\r\n    }\r\n    split() {\r\n        this.splitInternal(this.controlPoints, this.activePoint);\r\n        this.splitInternal(this.playbackPoints, this.activePoint);\r\n    }\r\n    join() {\r\n        if (this.controlPoints.length > 2 && this.activePoint > 0) {\r\n            this.controlPoints.splice(this.activePoint, 1);\r\n            this.playbackPoints.splice(this.activePoint, 1);\r\n        }\r\n    }\r\n}\r\nfunction getBpmFromFrames(numFrames, audioCtx) {\r\n    const durationS = numFrames / audioCtx.sampleRate;\r\n    let bpm = 60 / durationS;\r\n    while (bpm < 120 * Math.sqrt(0.5)) {\r\n        bpm *= 2;\r\n    }\r\n    return bpm;\r\n}\r\nfunction go() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const audioCtx = yield common_1.Common.getContext();\r\n        const sampleUri = url.searchParams.get('s');\r\n        const gameTime = new gameTime_1.GameTime(120);\r\n        const sample = new sample_1.Sample(sampleUri, gameTime);\r\n        const buffer = yield sample.getData();\r\n        const body = document.getElementsByTagName('body')[0];\r\n        const [peaksCanvas, barsCanvas, selectionCanvas] = initCanvas(body);\r\n        barsCanvas.tabIndex = 0;\r\n        const peaksCtx = peaksCanvas.getContext('2d');\r\n        const frames = buffer.getChannelData(0);\r\n        const bpm = getBpmFromFrames(frames.length, audioCtx);\r\n        const granules = new Granules(buffer, audioCtx);\r\n        peaksCtx.clearRect(0, 0, peaksCanvas.width, peaksCanvas.height);\r\n        renderBuffer(peaksCtx, peaksCanvas, audioCtx, frames, bpm);\r\n        renderBars(barsCanvas, frames, audioCtx, bpm);\r\n        granules.render(selectionCanvas, peaksCanvas);\r\n        barsCanvas.addEventListener('keydown', (ev) => {\r\n            let actionTaken = true;\r\n            switch (ev.code) {\r\n                case 'KeyS':\r\n                    granules.split();\r\n                    break;\r\n                case 'KeyJ':\r\n                    granules.changePlayStart(-0.01);\r\n                    break;\r\n                case 'KeyK':\r\n                    granules.changePlayStart(0.01);\r\n                    break;\r\n                case 'Delete':\r\n                case 'Backspace':\r\n                    granules.join();\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    granules.changeStart(-0.01);\r\n                    break;\r\n                case 'ArrowRight':\r\n                    granules.changeStart(0.01);\r\n                    break;\r\n                case 'ArrowDown':\r\n                    granules.changeEnd(-0.01);\r\n                    break;\r\n                case 'ArrowUp':\r\n                    granules.changeEnd(0.01);\r\n                    break;\r\n                case 'Tab':\r\n                    if (ev.shiftKey) {\r\n                        granules.next(-1);\r\n                    }\r\n                    else {\r\n                        granules.next(1);\r\n                    }\r\n                    break;\r\n                case 'Space':\r\n                    granules.play();\r\n                    break;\r\n            }\r\n            if (actionTaken) {\r\n                console.log(`Action: ${ev.code}`);\r\n                ev.preventDefault();\r\n                selectionCanvas.getContext('2d')\r\n                    .clearRect(0, 0, selectionCanvas.width, selectionCanvas.height);\r\n                granules.render(selectionCanvas, peaksCanvas);\r\n            }\r\n        });\r\n    });\r\n}\r\ngo();\r\n//# sourceMappingURL=open.js.map","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sample = void 0;\r\nconst common_1 = require(\"./common\");\r\nclass Sample {\r\n    constructor(url, gameTime) {\r\n        this.url = url;\r\n        this.gameTime = gameTime;\r\n        this.audioCtx = null;\r\n        this.buffer = null;\r\n        this.init();\r\n    }\r\n    init() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.buffer = yield this.getData();\r\n        });\r\n    }\r\n    getData() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.audioCtx = yield common_1.Common.getContext();\r\n            const request = new XMLHttpRequest();\r\n            request.open('GET', this.url, true);\r\n            request.responseType = 'arraybuffer';\r\n            return new Promise((resolve, reject) => {\r\n                request.onload = () => {\r\n                    const audioData = request.response;\r\n                    this.audioCtx.decodeAudioData(audioData, function (buffer) {\r\n                        resolve(buffer);\r\n                    }, reject);\r\n                };\r\n                request.send();\r\n            });\r\n        });\r\n    }\r\n    _play(audioTimeS) {\r\n        if (!this.audioCtx || !this.buffer) {\r\n            console.error('Sample is not loaded!');\r\n            return;\r\n        }\r\n        const audioNode = this.audioCtx.createBufferSource();\r\n        audioNode.buffer = this.buffer;\r\n        audioNode.connect(this.audioCtx.destination);\r\n        const nowAudioTime = this.audioCtx.currentTime;\r\n        const timeInFuture = audioTimeS - nowAudioTime;\r\n        audioNode.start(nowAudioTime + Math.max(timeInFuture, 0), Math.max(0, -timeInFuture));\r\n    }\r\n    playQuantized(gameTimeMs) {\r\n        const audioTimeS = this.gameTime.getAudioTimeForGameTime(gameTimeMs);\r\n        const quantizedAudioTimeS = this.gameTime.roundQuantizeAudioTime(audioTimeS);\r\n        this._play(quantizedAudioTimeS);\r\n    }\r\n}\r\nexports.Sample = Sample;\r\n//# sourceMappingURL=sample.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(367);\n",""],"names":[],"sourceRoot":""}